// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaGestaoClinicaMedica.Infra.Data;

namespace SistemaGestaoClinicaMedica.Infra.Data.Migrations
{
    [DbContext(typeof(ContextoBancoDados))]
    [Migration("20200226230529_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Administrador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FuncionarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Cargo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Cargo");

                    b.HasData(
                        new
                        {
                            Id = "Administrador",
                            Nome = "Administrador"
                        },
                        new
                        {
                            Id = "Medico",
                            Nome = "Médico"
                        },
                        new
                        {
                            Id = "Recepcionista",
                            Nome = "Recepcionista"
                        });
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Especialidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Especialidade");

                    b.HasData(
                        new
                        {
                            Id = new Guid("223bc23c-c660-4b74-bce3-dd1c80f84c46"),
                            Nome = "Clínica Médica"
                        },
                        new
                        {
                            Id = new Guid("390d5ecd-ed80-498b-b8ae-866fb0c2556c"),
                            Nome = "Cirurgia Geral"
                        },
                        new
                        {
                            Id = new Guid("4b930a2a-13b1-453e-b359-3a237d1eec6b"),
                            Nome = "Pediatria"
                        },
                        new
                        {
                            Id = new Guid("672c272e-390a-4553-bd2b-e38c6d53d7f9"),
                            Nome = "Ginecologia e Obstetrícia"
                        },
                        new
                        {
                            Id = new Guid("78fd1b38-f973-43b8-bc1d-468fcc9eee9c"),
                            Nome = "Anestesiologia"
                        },
                        new
                        {
                            Id = new Guid("586ac784-3f70-4755-90a0-0529e5a5e998"),
                            Nome = "Ortopedia e Traumatologia"
                        },
                        new
                        {
                            Id = new Guid("71a7fb49-6784-4a13-b86c-53bf9993fec6"),
                            Nome = "Oftalmologia"
                        },
                        new
                        {
                            Id = new Guid("19e4f770-9a6f-4657-9848-b21fbc085f06"),
                            Nome = "Cardiologia"
                        },
                        new
                        {
                            Id = new Guid("2ac10d49-656d-4d1f-adf7-823f2854e38a"),
                            Nome = "Radiologia e Diagnóstico por Imagem"
                        },
                        new
                        {
                            Id = new Guid("ca3db56c-d492-45ac-ab98-497c19812fd0"),
                            Nome = "Psiquiatria"
                        },
                        new
                        {
                            Id = new Guid("7b655c55-4437-459d-8e70-25dd5d4ecc5e"),
                            Nome = "Dermatologia"
                        },
                        new
                        {
                            Id = new Guid("9ea67d42-d8fc-484e-86e2-1825d8e86433"),
                            Nome = "Otorrinolaringologia"
                        },
                        new
                        {
                            Id = new Guid("cd9a9701-6c14-42e4-bd7f-87b76a346164"),
                            Nome = "Medicina de Família e Comunidade"
                        },
                        new
                        {
                            Id = new Guid("f39a3b16-d41a-41ea-84f8-441dd62ec56c"),
                            Nome = "Endocrinologia e Metabologia"
                        },
                        new
                        {
                            Id = new Guid("08f57da9-affa-4ccb-b0e5-633a6c236fc8"),
                            Nome = "Cirurgia Plástica"
                        },
                        new
                        {
                            Id = new Guid("d703b963-26a1-49c9-94f9-ad6a012467da"),
                            Nome = "Infectologia"
                        },
                        new
                        {
                            Id = new Guid("62019e3e-79a5-4259-9112-5f2d5086ec88"),
                            Nome = "Cirurgia Vascular"
                        },
                        new
                        {
                            Id = new Guid("0066630b-0eb4-4ab5-904b-e5b69f488a85"),
                            Nome = "Urologia"
                        },
                        new
                        {
                            Id = new Guid("28f2d3ec-5861-4187-9c4f-f8274a7ef3ad"),
                            Nome = "Cancerologia"
                        },
                        new
                        {
                            Id = new Guid("5418daa5-ea59-4016-863d-68ecf360c656"),
                            Nome = "Nefrologia"
                        },
                        new
                        {
                            Id = new Guid("49b1cdd6-9bb1-40b9-a255-201738c8830d"),
                            Nome = "Nutrologia"
                        });
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("CargoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2020, 2, 26, 20, 5, 29, 44, DateTimeKind.Local).AddTicks(9781));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.HorarioDeTrabalho", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DiaDaSemana")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Fim")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("FimAlmoco")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("InicioAlmoco")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MedicoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("HorarioDeTrabalho");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid?>("FuncionarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.MedicoEspecialidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EspecialidadeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MedicoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EspecialidadeId");

                    b.HasIndex("MedicoId");

                    b.ToTable("MedicoEspecialidade");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Recepcionista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FuncionarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Recepcionista");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Administrador", b =>
                {
                    b.HasOne("SistemaGestaoClinicaMedica.Dominio.Entidades.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Funcionario", b =>
                {
                    b.HasOne("SistemaGestaoClinicaMedica.Dominio.Entidades.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.HorarioDeTrabalho", b =>
                {
                    b.HasOne("SistemaGestaoClinicaMedica.Dominio.Entidades.Medico", null)
                        .WithMany("HorariosDeTrabalho")
                        .HasForeignKey("MedicoId");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Medico", b =>
                {
                    b.HasOne("SistemaGestaoClinicaMedica.Dominio.Entidades.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.MedicoEspecialidade", b =>
                {
                    b.HasOne("SistemaGestaoClinicaMedica.Dominio.Entidades.Medico", "Medico")
                        .WithMany("Especialidades")
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestaoClinicaMedica.Dominio.Entidades.Especialidade", "Especialidade")
                        .WithMany("Medicos")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaGestaoClinicaMedica.Dominio.Entidades.Recepcionista", b =>
                {
                    b.HasOne("SistemaGestaoClinicaMedica.Dominio.Entidades.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
