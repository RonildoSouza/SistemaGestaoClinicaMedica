@page "/exames"
@attribute [Authorize(Roles = "Administrador, Medico")]

@using SistemaGestaoClinicaMedica.Aplicacao.DTO;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Constantes;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Servicos;
@inherits TableBase<IExamesServico, ExameDTO, Guid>

<HeaderComponent Title="Consultar Exames" 
                 SearchVisibled="true"
                 SearchWithButton="true"
                 SearchPlaceholder="Informe o código do exame, consulta ou paciente"
                 OnSearch="BuscarAsync"/>

<TableComponent Items="dtos?.OrderByDescending(_ => _.CriadoEm).Take(20).ToList()">
    <TableHeader>
        <th>Código</th>
        <th>Tipo de Exame</th>
        <th>Status</th>
        <th>Laboratório Realizou o Exame</th>
        <th>Criado Em</th>
        <th>Ações</th>
    </TableHeader>
    <RowTemplate>
        <td>@context.Codigo</td>
        <td>@context.TipoDeExame.Nome</td>
        <td>@context.StatusExame.Nome</td>
        <td>@context.LaboratorioRealizouExame?.Nome</td>
        <td>@context.CriadoEm.ToShortDateString()</td>
        <td>
            @if (context.StatusExame.Id == StatusExameConst.Pendente && context.CriadoEm.Date == DateTime.Now.Date)
            {
                <ConfirmDialogComponent Id="@context.Id.ToString()"
                                        Message="@($"Deseja prosseguir com a exclusão do exame de {context.TipoDeExame.Nome}?")"
                                        ActionButtonText="Excluir"
                                        OnActionButton="@(e => Deletar(e, context.Id))">
                    <span class="oi oi-trash text-danger" aria-hidden="true"></span>
                </ConfirmDialogComponent>
            }

            @if (context.StatusExame.Id == StatusExameConst.Concluido)
            {
                <a href="@context.LinkResultadoExame" target="_blank" class="btn"><span class="oi oi-document" aria-hidden="true"></span></a>
            }
        </td>
    </RowTemplate>
</TableComponent>

@code{
    private async Task BuscarAsync(string busca)
    {
        dtos = await HttpServico.GetTudoComFiltrosAsync(busca);
    }
}