@using SistemaGestaoClinicaMedica.Aplicacao.DTO;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Servicos;
@inherits TableBase<IExamesServico, ExameDTO, Guid>

<HeaderComponent NewRoute="@($"consultas/{ConsultaId}/exames/novo")" />

<TableComponent Items="dtos">
    <TableHeader>
        <th>Codigo</th>
        <th>Tipo de Exame</th>
        <th>Status</th>
        <th>Ações</th>
    </TableHeader>
    <RowTemplate>
        <td>@context.Codigo</td>
        <td>@context.TipoDeExame.Nome</td>
        <td>@context.StatusExame.Nome</td>
        <td>
            <a href="@context.LinkResultadoExame" target="_blank" class="btn"><span class="oi oi-document" aria-hidden="true"></span></a>
            <a href="consultas/@context.ConsultaId/exames/{@context.Id}" class="btn"><span class="oi oi-pencil" aria-hidden="true"></span></a>
            <ConfirmDialogComponent Id="@context.Id.ToString()"
                                    Message="@($"Deseja prosseguir com a exclusão do exame de {context.TipoDeExame.Nome}?")"
                                    ActionButtonText="Excluir"
                                    OnActionButton="@(e => Deletar(e, context.Id))">
                <span class="oi oi-trash text-danger" aria-hidden="true"></span>
            </ConfirmDialogComponent>
        </td>
    </RowTemplate>
</TableComponent>

@code {
    [Parameter] public Guid ConsultaId { get; set; }

    protected async override Task CarregaDadosDaTabela()
    {
        dtos = await HttpServico.GetPorConsultaAsync(ConsultaId);
    }
}