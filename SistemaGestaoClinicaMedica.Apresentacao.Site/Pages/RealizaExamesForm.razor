@page "/realiza-exames"
@attribute [Authorize(Roles = "Administrador, Laboratorio")]

@using SistemaGestaoClinicaMedica.Aplicacao.DTO;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Constantes;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Servicos;
@inherits FormBase<IExamesServico, ExameDTO, Guid>

<HeaderComponent Title="Exames"
                 SearchPlaceholder="Informe o código do exame"
                 SearchVisibled="true"
                 SearchWithButton="true"
                 SearchMinLenght="8"
                 OnSearch="@BuscarAsync" />

<FormComponent Item="_dto"
               OnValidSubmit="Salvar"
               SubmitButtonText="Concluir Exame"
               SubmitButtonVisibled="@(_dto.StatusExame.Id != StatusExameConst.Concluido)">

    @if (_dto.StatusExame.Id != StatusExameConst.Concluido && _dto.Id != Guid.Empty && string.IsNullOrEmpty(_dto.LinkResultadoExame))
    {
        <div class="form-group col-md-12">
            <label for="resultado-exame">Enviar Resultado do Exame</label>
            <InputFile OnChange="EnviarResultadoAsync" class="form-control-file" id="resultado-exame" accept=".jpg, .jpeg, .png, .pdf, .doc, .docx"/>
        </div>
    }

    @if (_dto.StatusExame.Id == StatusExameConst.Concluido || _dto.StatusExame.Id == StatusExameConst.EmAnaliseLaboratorial)
    {
        <div class="alert alert-info" role="alert" style="width:100%">
            Este exame está <strong>@context.StatusExame.Nome</strong>!
        </div>
    }

    <div class="form-group col-md-12">
        <label for="tipo-exame">Tipo de Exame</label>
        <input type="text" value="@context.TipoDeExame.Nome" class="form-control" id="tipo-exame" disabled />
    </div>
    <div class="form-group col-md-12">
        <label for="observacao">Observação</label>
        <textarea value="@context.Observacao" class="form-control" id="observacao" disabled />
    </div>
</FormComponent>

@code {
    protected override string AposSalvarRetonarPara => $"realiza-exames";
}