@page "/login"

@using SistemaGestaoClinicaMedica.Apresentacao.Site.Servicos;
@using SistemaGestaoClinicaMedica.Aplicacao.DTO.Login;

<h1>Login</h1>

<EditForm Model="_loginEntradaDTO" OnValidSubmit="LoginAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-md-12">
            <InputText type="email" @bind-Value="_loginEntradaDTO.Email" placeholder="Email" class="form-control" />
        </div>
        <div class="col-md-12">
            <InputText type="password" @bind-Value="_loginEntradaDTO.Senha" placeholder="Senha" class="form-control" />
        </div>
        <div class="col-md-12">
            <button type="submit" class="btn btn-success">Login</button>
        </div>
    </div>
</EditForm>

@code{
    private LoginEntradaDTO _loginEntradaDTO = new LoginEntradaDTO();

    [Inject] private ILoginServico AuthServico { get; set; }

    private async Task LoginAsync()
    {
        await AuthServico.Login(_loginEntradaDTO);
    }


    //[CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    //private async Task LogUserAuthenticationState()
    //{
    //    var authState = await AuthenticationStateTask;
    //    var user = authState.User;

    //    if (user.Identity.IsAuthenticated)
    //    {
    //        Console.WriteLine($"User {user.Identity.Name} is authenticated.");
    //    }
    //    else
    //    {
    //        Console.WriteLine("User is NOT authenticated.");
    //    }
    //}
}
