@page "/usuarios"
@attribute [Authorize(Roles = "Administrador")]

@using SistemaGestaoClinicaMedica.Aplicacao.DTO;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Extensions;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Servicos;
@inherits TableBase<IUsuariosServico, UsuarioDTO, Guid>

<HeaderComponent Title="Usuários"
                 NewRoute="usuarios/novo"
                 SearchPlaceholder="Informe o nome ou email do usuário"
                 SearchVisibled="true"
                 SearchColMd="8"
                 OnSearch="BuscarAsync">    
    <div class="form-group col-md-4">
        <label for="ativo">Ativo</label>
        <select class="form-control" id="ativo" @onchange="SelecionaAtivo">
            <option value="Sim">Sim</option>
            <option value="Não">Não</option>
        </select>
    </div>
</HeaderComponent>

<TableComponent Items="dtos">
    <TableHeader>
        <th>Nome</th>
        <th>Email</th>
        <th>Cargo</th>
        <th>Telefone</th>
        <th>Ativo</th>
        <th style="width: 120px;"></th>
    </TableHeader>
    <RowTemplate>
        <td>@context.Nome</td>
        <td>@context.Email</td>
        <td>@context.Cargo.Nome</td>
        <td>@context.Telefone</td>
        <td>@(context.Ativo ? "Sim" : "Não")</td>
        <td>
            <button @onclick="(e => EditarUsuario(context.Cargo.Id, context.Id))" class="btn"><span class="oi oi-pencil" aria-hidden="true"></span></button>

            @if (context.Ativo && !context.ESuperUsuario)
            {
                <ConfirmDialogComponent Id="@context.Id.ToString()"
                                        Message="@($"O usuário {context.Nome} será inativado, deseja prosseguir?")"
                                        ActionButtonText="Excluir"
                                        OnActionButton="@(e => Deletar(e, context.Id))">
                    <span class="oi oi-trash text-danger" aria-hidden="true"></span>
                </ConfirmDialogComponent>
            }
        </td>
    </RowTemplate>
</TableComponent>

@code{
    private bool _ativo;

    private async Task EditarUsuario(string cargoId, Guid id)
    {
        await LocalStorage.CriaUsuarioCargoIdEdicaoLocalStorageAsync(cargoId);
        NavigationManager.NavigateTo($"usuarios/{id}");
    }

    private async Task BuscarAsync(string busca)
    {
        dtos = await HttpServico.GetTudoComFiltrosAsync(busca, _ativo);
        StateHasChanged();
    }

    private void SelecionaAtivo(ChangeEventArgs args)
    {
        _ativo = args.Value.ToString().Equals("Sim");
    }
}