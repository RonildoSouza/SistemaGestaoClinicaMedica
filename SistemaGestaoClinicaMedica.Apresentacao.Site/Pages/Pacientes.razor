@page "/pacientes"
@attribute [Authorize(Roles = "Administrador, Recepcionista")]

@using SistemaGestaoClinicaMedica.Aplicacao.DTO;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Servicos;
@inherits TableBase<IPacientesServico, PacienteDTO, Guid>

<HeaderComponent Title="Pacientes"
                 NewRoute="pacientes/novo"
                 SearchPlaceholder="Informe o nome ou email do usuário"
                 SearchVisibled="true"
                 SearchColMd="8"
                 OnSearch="BuscarAsync">
    <div class="form-group col-md-4">
        <label for="ativo">Ativo</label>
        <select class="form-control" id="ativo" @onchange="SelecionaAtivo">
            <option value="Sim">Sim</option>
            <option value="Não">Não</option>
        </select>
    </div>
</HeaderComponent>

<TableComponent Items="dtos?.Take(50).ToList()">
    <TableHeader>
        <th>Código</th>
        <th>Nome</th>
        <th>Telefone</th>
        <th></th>
    </TableHeader>
    <RowTemplate>
        <td>@context.Codigo</td>
        <td>@context.Nome</td>
        <td>@context.Telefone</td>
        <td>
            <a href="pacientes/@context.Id" class="btn"><span class="oi oi-pencil" aria-hidden="true"></span></a>

            @if (ApplicationState.UsuarioLogado.EAdministrador)
            {
                <ConfirmDialogComponent Id="@context.Id.ToString()"
                                        Message="@($"Deseja prosseguir com a exclusão do paciente {context.Nome}?")"
                                        ActionButtonText="Excluir"
                                        OnActionButton="@(e => Deletar(e, context.Id))">
                    <span class="oi oi-trash text-danger" aria-hidden="true"></span>
                </ConfirmDialogComponent>
            }
        </td>
    </RowTemplate>
</TableComponent>

@code{
    private bool _ativo;
    [Inject] private ApplicationState ApplicationState { get; set; }

    private async Task BuscarAsync(string busca)
    {
        dtos = await HttpServico.GetTudoComFiltrosAsync(busca, _ativo);
        StateHasChanged();
    }

    private void SelecionaAtivo(ChangeEventArgs args)
    {
        _ativo = args.Value.ToString().Equals("Sim");
    }
}