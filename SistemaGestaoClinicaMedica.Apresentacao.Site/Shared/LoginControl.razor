@using System.Web;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Servicos;
@using SistemaGestaoClinicaMedica.Infra.CrossCutting.Config.Servicos;

<AuthorizeView>
    <NotAuthorized>
        <h1 class="text-center">Sistema de Gestão de Clinica Médica</h1>
        <div class="card" style="width: 30rem;position: relative;margin: auto;margin-top: 6rem;">
            <div class="card-body">
                @if (_carregando)
                {
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status" style="width: 3rem; height: 3rem;"></div>
                    </div>
                }
                else
                {
                    <h4 class="card-title text-center">Logar no sistema</h4>

                    <div class="row">
                        <div class="col-md-12">
                            @if (_tentouLogar)
                            {
                                <div class="alert alert-info" role="alert">
                                    Verifique se o email e senha estão corretos!
                                </div>
                            }

                            <div class="form-group">
                                <label for="email">Email</label>
                                <input type="email" @bind-value="_email" class="form-control" id="email" />
                            </div>
                            <div class="form-group">
                                <label for="senha">Senha</label>
                                <input type="password" @bind-value="_senha" class="form-control" id="senha" />
                            </div>

                            <a class="btn btn-primary btn-lg btn-block" href="/login?email=@Encode(_email)&senha=@Encode(Encryption64.Encrypt(_senha))" target="_top" @onclick="Login">Logar</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{
    private string _email;
    private string _senha;
    private bool _carregando;
    private bool _tentouLogar;

    [Parameter] public bool TL { get; set; }

    [Inject] private ApplicationState ApplicationState { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        _tentouLogar = TL;
    }

    private string Encode(string param)
    {
        return HttpUtility.UrlEncode(param);
    }

    private void Login()
    {
        _carregando = true;
        StateHasChanged();

        _tentouLogar = true;
    }
}