@inherits LayoutComponentBase

<AuthorizeView>
    <Authorized>
        <div class="sidebar">
            <NavMenu />
        </div>
    </Authorized>
</AuthorizeView>

<div class="main">
    <div class="content px-4">
        <BlazoredToasts Position="Blazored.Toast.Configuration.ToastPosition.BottomRight"
                        InfoClass="alert alert-info"
                        SuccessClass="alert alert-success"
                        WarningClass="alert alert-warning"
                        ErrorClass="alert alert-danger" />

        <LoginControl />

        @Body
    </div>
</div>

@using SistemaGestaoClinicaMedica.Apresentacao.Site.Constantes;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Servicos;
@using SistemaGestaoClinicaMedica.Apresentacao.Site.Modelo;

@code {
    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    [Inject] private IJSRuntime JSRuntime { get; set; }
    [Inject] private ApplicationState ApplicationState { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            var authenticationState = await AuthenticationStateTask;

            if (authenticationState.User.Identity.IsAuthenticated)
            {
                var usuarioLogado = ApplicationState.UsuarioLogado;

                if (usuarioLogado.CargoId == CargosConst.Administrador || usuarioLogado.CargoId == CargosConst.Medico)
                    NavigationManager.NavigateTo("/");

                if (usuarioLogado.CargoId == CargosConst.Recepcionista)
                    NavigationManager.NavigateTo("calendario-de-consultas");

                if (usuarioLogado.CargoId == CargosConst.Laboratorio)
                    NavigationManager.NavigateTo("realiza-exames");
            }
            else
            {
                ApplicationState.UsuarioLogado = new UsuarioLogado();
                NavigationManager.NavigateTo("login");
            }

            await JSRuntime.InvokeVoidAsync("select2JsInterop.startup");
        }
    }
}